{"version":3,"file":"static/js/33.8f5fc104.chunk.js","mappings":"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","sources":["webpack://wallet-application/./src/components/Balance/Balance.module.scss?bde2","components/Balance/Balance.jsx","webpack://wallet-application/./src/components/CurrencyTable/CurrencyTable.module.scss?daa9","components/CurrencyTable/CurrencyTable.jsx","webpack://wallet-application/./src/components/RegistrationForm/RegistrationForm.module.scss?6285","utils/patterns.js","components/RegistrationForm/RegistrationForm.jsx","webpack://wallet-application/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://wallet-application/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","webpack://wallet-application/./src/components/Background/Background.module.scss?3c89","components/Background/Background.jsx","webpack://wallet-application/./src/components/Transactions/Transactions.module.scss?e1bb","components/Transactions/Transactions.jsx","webpack://wallet-application/./src/pages/Home/Home.module.scss?ce6f","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__tUx3D\",\"title\":\"Balance_title__aUwwk\",\"amount\":\"Balance_amount__t4xet\"};","import css from './Balance.module.scss';\n\nexport const Balance = () => {\n  return (\n    <div className={css.balance}>\n      <p className={css.title}>YOUR BALANCE</p>\n      <p className={css.amount}>PLN 0.00</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"CurrencyTable_tableBg__nplZ5\",\"currencyTable\":\"CurrencyTable_currencyTable__1iH+4\",\"currencyTableHead\":\"CurrencyTable_currencyTableHead__0L-k0\"};","import css from './CurrencyTable.module.scss';\n\nexport const CurrencyTable = () => {\n  return (\n    <div className={css.tableBg}>\n      <table className={css.currencyTable}>\n        <thead className={css.currencyTableHead}>\n          <tr>\n            <th>Currency</th>\n            <th>Purchase</th>\n            <th>Sell</th>\n          </tr>\n        </thead>\n        <tbody className={css.currencyTableBody}>\n          <tr>\n            <td>USD</td>\n            <td>3,9077</td>\n            <td>3,9867</td>\n          </tr>\n          <tr>\n            <td>EUR</td>\n            <td>4,2895</td>\n            <td>4,3761</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"registration-form\":\"RegistrationForm_registration-form__tvXg0\",\"error-message\":\"RegistrationForm_error-message__xXzPo\",\"box\":\"RegistrationForm_box__y2CqE\"};","export const passwordPattern = new RegExp(\n  `^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+-=[]{}'\"\\\\|,.<>/?~])`\n);\nexport const namePattern = new RegExp(`^[a-zA-ZąćęłńóśżźĄĆĘŁŃÓŚŻŹ]+$`);\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport styles from './RegistrationForm.module.scss';\nimport { Button } from 'components';\nimport { passwordPattern, namePattern } from 'utils/patterns';\n\nexport const RegistrationForm = () => {\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .matches(namePattern, 'Name can only contains letters')\n      .required('Name is required')\n      .max(12, 'Name should be at most 12 characters'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        passwordPattern,\n        'The password should contain at least one uppercase letter, one special character, and one digit'\n      )\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(12, 'Password should be at most 12 characters'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Confirm password is required'),\n  });\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    alert(JSON.stringify(values));\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['registration-form']}>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"First name\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"name\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"E-mail\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"email\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"password\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"password\"\n                name=\"confirmPassword\"\n                placeholder=\"Confirm password\"\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"confirmPassword\"\n                component=\"div\"\n              />\n            </div>\n            <Button type=\"submit\" theme=\"color\">\n              Register\n            </Button>\n\n            <Link to=\"/login\">\n              <Button type=\"button\" theme=\"white\">\n                Log in\n              </Button>\n            </Link>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"button-white\":\"Button_button-white__8-Y8O\",\"button-color\":\"Button_button-color__qDUYL\"};","import styles from './Button.module.scss';\n\nexport const Button = ({ children, type = 'button', theme, className }) => {\n  const buttonClass =\n    theme === 'color'\n      ? styles['button-color']\n      : theme === 'white'\n      ? styles['button-white']\n      : '';\n\n  return (\n    <button\n      className={`${styles.Button} ${buttonClass} ${className}`}\n      type={type}\n    >\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"login-form\":\"LoginForm_login-form__o6Oo+\",\"error-message\":\"LoginForm_error-message__KsfSZ\",\"box\":\"LoginForm_box__s16CP\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport styles from './LoginForm.module.scss';\nimport { Button } from 'components';\nimport { passwordPattern } from 'utils/patterns';\n\nexport const LoginForm = () => {\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        passwordPattern,\n        'The password should contain at least one uppercase letter, one special character, and one digit'\n      )\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(12, 'Password should be at most 12 characters'),\n  });\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    alert(JSON.stringify(values));\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['login-form']}>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"E-mail\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"email\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"password\"\n                component=\"div\"\n              />\n            </div>\n\n            <Button type=\"button\" theme=\"color\">\n              Log in\n            </Button>\n            <Link to=\"/register\">\n              <Button type=\"submit\" theme=\"white\">\n                Register\n              </Button>\n            </Link>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__syS0M\"};","import styles from './Background.module.scss';\n\nexport const Background = () => {\n  return <div className={styles.background}></div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionsTable\":\"Transactions_transactionsTable__klztX\",\"transactionsTableHead\":\"Transactions_transactionsTableHead__UmWQz\",\"transactionsTablebody\":\"Transactions_transactionsTablebody__D0TIz\",\"sumSection\":\"Transactions_sumSection__QP2mB\"};","import React, { useState, useEffect } from 'react';\nimport { Button } from 'components';\nimport css from './Transactions.module.scss';\n\nconst initialTransactions = [\n  ['2023-12-04', '-', 'Other', 'Christmas gift', '300.00'],\n  ['2023-12-05', '+', 'Income', 'Salary', '5000.00'],\n  ['2023-12-07', '+', 'Income', 'Painting walls', '1000.00'],\n  ['2023-12-10', '-', 'Products', 'Grocery', '400.00'],\n  ['2023-12-15', '-', 'Bills', 'Rent', '2500.00'],\n  ['2023-12-15', '-', 'Bills', 'Phone', '180.00'],\n];\n\nexport const Transactions = () => {\n  const [transactions, setTransactions] = useState(initialTransactions);\n  const [sortOrder, setSortOrder] = useState({\n    column: null,\n    direction: 'asc',\n  });\n  const [sumPlus, setSumPlus] = useState(0);\n  const [sumMinus, setSumMinus] = useState(0);\n  const [balance, setBalance] = useState(0);\n\n  const handleSort = column => {\n    const direction =\n      column === sortOrder.column && sortOrder.direction === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    const sortedTransactions = [...transactions].sort((a, b) => {\n      let valueA = column === 4 ? parseFloat(a[column]) : a[column];\n      let valueB = column === 4 ? parseFloat(b[column]) : b[column];\n\n      if (column === 0) {\n        valueA = new Date(valueA);\n        valueB = new Date(valueB);\n      }\n\n      return direction === 'asc'\n        ? valueA > valueB\n          ? 1\n          : -1\n        : valueA < valueB\n        ? 1\n        : -1;\n    });\n\n    setTransactions(sortedTransactions);\n    setSortOrder({ column, direction });\n  };\n\n  const updateSums = () => {\n    let totalPlus = 0;\n    let totalMinus = 0;\n\n    transactions.forEach(transaction => {\n      const amount = parseFloat(transaction[4]);\n      if (transaction[1] === '+') {\n        totalPlus += amount;\n      } else if (transaction[1] === '-') {\n        totalMinus += amount;\n      }\n    });\n\n    setSumPlus(totalPlus);\n    setSumMinus(totalMinus);\n\n    setBalance(totalPlus - totalMinus);\n  };\n\n  useEffect(() => {\n    updateSums();\n  }, [transactions]);\n\n  return (\n    <div>\n      <div className={css.tableBg}>\n        <table className={css.transactionsTable}>\n          <thead className={css.transactionsTableHead}>\n            <tr>\n              <th onClick={() => handleSort(0)} title=\"Sort\">\n                Date\n              </th>\n              <th onClick={() => handleSort(1)} title=\"Sort\">\n                Type\n              </th>\n              <th onClick={() => handleSort(2)} title=\"Sort\">\n                Category\n              </th>\n              <th onClick={() => handleSort(3)} title=\"Sort\">\n                Comment\n              </th>\n              <th onClick={() => handleSort(4)} title=\"Sort\">\n                Sum\n              </th>\n              <th>Options</th>\n            </tr>\n          </thead>\n          <tbody className={css.transactionsTableBody}>\n            {transactions.map((transaction, index) => (\n              <tr key={index}>\n                {transaction.map((data, dataIndex) => (\n                  <td key={dataIndex}>{data}</td>\n                ))}\n                <td>\n                  <Button\n                    type=\"button\"\n                    theme=\"white\"\n                    width=\"80px\"\n                    height=\"40px\"\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    theme=\"color\"\n                    width=\"80px\"\n                    height=\"40px\"\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className={css.sumSection}>\n        <p>Incomes: {sumPlus.toFixed(2)}</p>\n        <p>Expenses: {sumMinus.toFixed(2)}</p>\n        <p>\n          <b>Balance: {balance.toFixed(2)}</b>\n        </p>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__qRlyu\",\"sidebar\":\"Home_sidebar__74EFX\",\"main\":\"Home_main__4+rG5\"};","import { Transactions } from 'components/Transactions/Transactions';\nimport css from './Home.module.scss';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport { Balance } from 'components/Balance/Balance';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  return (\n    <div>\n      <section className={css.dashboard_container}>\n        <div className={css.container}>\n          <div className={css.sidebar}>\n            <ul className={css.navigation}>\n              <li>\n                <Link to=\"/home\">Home</Link>\n              </li>\n\n              <li>\n                <Link to=\"/statistics\">Statistics</Link>\n              </li>\n            </ul>\n            <Balance />\n            <CurrencyTable />\n          </div>\n          <div className={css.main}>\n            {/* <p>Add your first transaction</p> */}\n            <Transactions />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["Balance","_jsxs","className","css","children","_jsx","CurrencyTable","passwordPattern","RegExp","namePattern","RegistrationForm","validationSchema","Yup","shape","name","matches","required","max","email","password","min","confirmPassword","oneOf","_Fragment","Formik","initialValues","onSubmit","values","_ref","setSubmitting","alert","JSON","stringify","Form","styles","Field","type","placeholder","ErrorMessage","component","autoComplete","Button","theme","Link","to","_ref$type","buttonClass","concat","LoginForm","Background","initialTransactions","Transactions","_useState","useState","_useState2","_slicedToArray","transactions","setTransactions","_useState3","column","direction","_useState4","sortOrder","setSortOrder","_useState5","_useState6","sumPlus","setSumPlus","_useState7","_useState8","sumMinus","setSumMinus","_useState9","_useState10","balance","setBalance","handleSort","sortedTransactions","_toConsumableArray","sort","a","b","valueA","parseFloat","valueB","Date","useEffect","totalPlus","totalMinus","forEach","transaction","amount","updateSums","onClick","title","map","index","data","dataIndex","width","height","toFixed"],"sourceRoot":""}